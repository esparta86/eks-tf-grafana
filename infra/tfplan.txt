
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_subnets.list_private_subnets_deployment_eks_ids will be read during apply
  # (config refers to values not yet known)
 <= data "aws_subnets" "list_private_subnets_deployment_eks_ids"  {
      + id   = (known after apply)
      + ids  = (known after apply)
      + tags = (known after apply)

      + filter {
          + name   = "tag:eks"
          + values = [
              + "deployment",
            ]
        }
      + filter {
          + name   = "vpc-id"
          + values = [
              + (known after apply),
            ]
        }
    }

  # aws_eip.nat will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Environment"   = "Development"
          + "Name"          = "nat"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + tags_all             = {
          + "Environment"   = "Development"
          + "Name"          = "nat"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + vpc                  = true
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Environment"   = "Development"
          + "Name"          = "igw"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + tags_all = {
          + "Environment"   = "Development"
          + "Name"          = "igw"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.nat will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Environment"   = "Development"
          + "Name"          = "nat-eks-public"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + tags_all             = {
          + "Environment"   = "Development"
          + "Name"          = "nat-eks-public"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
    }

  # aws_subnet.eks_private_subnet[0] will be created
  + resource "aws_subnet" "eks_private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-0-us-east-1a"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-0-us-east-1a"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.eks_private_subnet[1] will be created
  + resource "aws_subnet" "eks_private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-1-us-east-1b"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-1-us-east-1b"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.eks_private_subnet[2] will be created
  + resource "aws_subnet" "eks_private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-2-us-east-1c"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-private-subnet-2-us-east-1c"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Private"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.eks_public_subnet[0] will be created
  + resource "aws_subnet" "eks_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = (known after apply)
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-0-us-east-1a"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-0-us-east-1a"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.eks_public_subnet[1] will be created
  + resource "aws_subnet" "eks_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = (known after apply)
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-1-us-east-1b"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-1-us-east-1b"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.eks_public_subnet[2] will be created
  + resource "aws_subnet" "eks_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = (known after apply)
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-2-us-east-1c"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + tags_all                                       = {
          + "Environment"                     = "Development"
          + "Name"                            = "eks-public-subnet-2-us-east-1c"
          + "Terraform"                       = "true"
          + "cloudprovider"                   = "aws"
          + "eks"                             = "deployment"
          + "kubernetes.io/cluster/demo"      = "owned"
          + "kubernetes.io/role/internal-elb" = "1"
          + "owner"                           = "devops-team"
          + "tier"                            = "Public"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main_vpc will be created
  + resource "aws_vpc" "main_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Environment"   = "Development"
          + "Name"          = "main"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
      + tags_all                             = {
          + "Environment"   = "Development"
          + "Name"          = "main"
          + "Terraform"     = "true"
          + "cloudprovider" = "aws"
          + "owner"         = "devops-team"
        }
    }

Plan: 10 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
